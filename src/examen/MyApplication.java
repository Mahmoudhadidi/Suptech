package examen;


import com.codename1.components.ImageViewer;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.testing.TestUtils;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.TextField;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.util.UIBuilder;
import com.esprit.gui.HomeForm;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication extends Form{

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        UIBuilder.registerCustomComponent("ImageViewer", ImageViewer.class);
       UIBuilder ui = new UIBuilder();
      Container cnt1 = ui.createContainer(theme, "GUI 1");
     // Form f1 = new Form();
     // f1.add(cnt1);
Form f1 = ui.createContainer(theme, "GUI 1")
                .getComponentForm();
       f1.show();
       
       TextField a = (TextField) ui.findByName("login", f1);
       TextField b = (TextField) ui.findByName("password", f1);
       Button b1 = (Button) ui.findByName("b1", f1);
       Label show = (Label) ui.findByName("show",f1);
       
      

       b1.addActionListener(new ActionListener() {
//            String login = a.getText();
//       String password = b.getText();
            @Override
            public void actionPerformed(ActionEvent evt) {
//       if (a.getText().toString().isEmpty() || b.getText().toString().isEmpty()){
//       show.setText("Remplir le formulaire SVP !! ");
//       }
  //   if(a.getText().toString().equals("admin") && b.getText().toString().equals("admin")){
//if(combo.getSelectedItem().toString().equals("Europe")){
//                A.setText("Espagne");
//                B.setText("Italie");
//                 C.setText("France");
//                  D.setText("");
//                }
             //  HomeForm.show();
              
     //  }
       
       
       
            }
        });
       
         
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
